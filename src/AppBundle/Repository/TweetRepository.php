<?php

namespace AppBundle\Repository;

/**
 * TweetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TweetRepository extends \Doctrine\ORM\EntityRepository
{
    public function search($query, $twitterUser, $page, $resultsPerPage)
    {
        if ($twitterUser) {
            return $this->getEntityManager()
                ->createQuery("
                SELECT tweet
                FROM AppBundle:Tweet tweet
                WHERE MATCH_AGAINST(tweet.content, :query) > 0
                OR tweet.twitterUser = :twitterUserId
            ")
                ->setParameter('query', $query)
                ->setParameter('twitterUserId', $twitterUser->getId())
                ->setFirstResult($resultsPerPage * ($page - 1))
                ->setMaxResults($resultsPerPage)
                ->getResult();
        }

        return $this->getEntityManager()
            ->createQuery("
                SELECT tweet
                FROM AppBundle:Tweet tweet
                WHERE MATCH_AGAINST(tweet.content, :query) > 0
            ")
            ->setParameter('query', $query)
            ->setFirstResult($resultsPerPage * ($page - 1))
            ->setMaxResults($resultsPerPage)
            ->getResult();
    }

    public function countTweets($query, $twitterUser = null)
    {
        if ($twitterUser) {
            return $this->getEntityManager()
                ->createQuery("
                    SELECT COUNT(tweet)
                    FROM AppBundle:Tweet tweet
                    WHERE MATCH_AGAINST(tweet.content, :query) > 0
                    OR tweet.twitterUser = :twitterUserId
                ")
                ->setParameter('query', $query)
                ->setParameter('twitterUserId', $twitterUser->getId())
                ->getSingleScalarResult();
        }

        return $this->getEntityManager()
            ->createQuery("
                SELECT COUNT(tweet)
                FROM AppBundle:Tweet tweet
                WHERE MATCH_AGAINST(tweet.content, :query) > 0
            ")
            ->setParameter('query', $query)
            ->getSingleScalarResult();
    }
}
